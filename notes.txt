Overall Assumptions or design decisions.

The distances for each event will be manually entered during event creation since the tracks can vary between 250 and 330 meters.


Number of cyclists in each team is checked by Simulate(), if number is more or less than regulation bool 
isReady() is set to false and simulation will not run. The GUI should then indicate  that a parameter is incorrect.


Strategy consists of Transitions and Power Intervals. These are entered in the GUI then stored in Simulation(), 
transitions as a vector of integers and power intervals as a 2d vector. For optimization(), a range is entered 
for each and a random number generator, bounded by the ranges specified will be used to set the transition and 
interval times for each simulation. 


isReady() in Simulation() will check to make sure that only femal riders will participate in women's events.
Same for male riders and male events. It will check also that only a single rider is entered for individual events.
And make sure that a team event is entered by a team no less than 2 and no larger than 9.



Simulation() or a single run inside optimization will generate a result. isFeasible() will try to determine whether a 
strategy is feasible or not by comparing each Cyclist's maximum energy potential against the energy used in the 
results. Max energy potential is calculated using age, gender, weight, height and v02max of each cyclist. 
isFeasible() will check to make sure that the required amount of riders finished(did not exceed max energy) the race.



Inside the optimization(), each run stores results in a temporary Result object. It is then checked for feasibility.
If not feasible it is discared, if ture then time of temporary result is compared to previously stored one.
If new result is faster and feasible, it overrides the previous best, else it is discarded. 



